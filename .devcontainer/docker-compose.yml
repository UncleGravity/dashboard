version: '3.8'

name: dashboard

services:

  # PROMETHEUS ##################################################
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  # CADVISOR ##################################################
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    restart: unless-stopped
    volumes:
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro

    # volumes:
      - /:/rootfs:ro
      - /dev/disk/:/dev/disk:ro
    # volumes:
      # - /var/lib/docker/:/var/lib/docker:ro
      # - /dev/disk/:/dev/disk:ro
      # - /sys:/sys:ro
      # - /var/run:/var/run:rw
      # - /:/rootfs:ro
      # - /sys/fs/cgroup:/cgroup:ro
      # - /etc/machine-id:/etc/machine-id:ro
      # - /etc/localtime:/etc/localtime:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    ports:
      - 8080:8080

  # NODE EXPORTER ##################################################
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    restart: unless-stopped
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100

  # TIMESCALE DB ##################################################
  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb:latest-pg14
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    env_file:
      - .env

  # SUPERSCRAPER ##################################################
  superscraper:
    container_name: superscraper
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      - ../:/workspaces/dashboard
      
    # Overrides default command so things don't shut down after the process ends.
    # command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:timescaledb

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    depends_on:
      - timescaledb
    env_file:
      - .env

  # GRAFANA ##################################################
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    depends_on:
      - timescaledb
    env_file:
      - .env

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  prometheus-data:
  timescaledb-data:
  grafana-data:
